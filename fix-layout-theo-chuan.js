const fs = require('fs');
const path = require('path');

// Danh s√°ch trang c·∫ßn s·ª≠a
const pagesToFix = [
    { file: 'dangky.html', title: 'ƒêƒÉng k√Ω thu·∫ø', icons: [
        { img: 'assets/dk1.png', text: 'Thay ƒë·ªïi<br>th√¥ng tin ƒëƒÉng<br>k√Ω thu·∫ø', link: 'thaydoittdkthue.html' },
        { img: 'assets/dk2.png', text: 'Tra c·ª©u th√¥ng<br>tin ng∆∞·ªùi ph·ª•<br>thu·ªôc', link: 'tracuttnpt.html' },
        { img: 'assets/dk3.png', text: 'H·ªì s∆° ƒëƒÉng k√Ω<br>thu·∫ø', link: 'hsdkythue.html' }
    ]},
    { file: 'khaithue.html', title: 'Khai thu·∫ø', icons: [
        { img: 'assets/kt1.png', text: 'T·ªù khai thu·∫ø<br>GTGT', link: '#' },
        { img: 'assets/kt2.png', text: 'T·ªù khai thu·∫ø<br>TNCN', link: '#' },
        { img: 'assets/kt3.png', text: 'T·ªù khai thu·∫ø<br>kh√°c', link: '#' }
    ]},
    { file: 'ho-tro-qtt.html', title: 'H·ªó tr·ª£ quy·∫øt to√°n thu·∫ø TNCN', icons: [
        { img: 'assets/htqt1.png', text: 'H·ªì s∆° quy·∫øt<br>to√°n thu·∫ø', link: 'thaydoittdkthue.html' },
        { img: 'assets/htqt2.png', text: 'Tra c·ª©u th√¥ng<br>tin quy·∫øt to√°n', link: 'tracuttnpt.html' },
        { img: 'assets/htqt3.png', text: 'Tra c·ª©u ph·∫£n<br>√°nh QTT g·ª≠i<br>ƒë·∫øn CQT', link: 'hsdkythue.html' },
        { img: 'assets/htqt4.png', text: 'H·ªó tr·ª£ l·∫≠p t·ªù<br>khai quy·∫øt<br>to√°n', link: 'thaydoittdkthue.html' }
    ]},
    { file: 'nopthue.html', title: 'Nh√≥m ch·ª©c nƒÉng n·ªôp thu·∫ø', icons: [
        { img: 'assets/icon1.png', text: 'N·ªôp t·ªù khai<br>thu·∫ø', link: '#' },
        { img: 'assets/icon2.png', text: 'N·ªôp thu·∫ø', link: '#' },
        { img: 'assets/icon3.png', text: 'Thanh to√°n<br>thu·∫ø', link: '#' },
        { img: 'assets/icon4.png', text: 'Tra c·ª©u<br>n·ª£ thu·∫ø', link: '#' },
        { img: 'assets/icon5.png', text: 'T√≠nh l√£i<br>ch·∫≠m n·ªôp', link: '#' },
        { img: 'assets/icon8.png', text: 'Tra c·ª©u<br>h√≥a ƒë∆°n', link: '#' }
    ]},
    { file: 'nghiavu.html', title: 'Tra c·ª©u nghƒ©a v·ª• thu·∫ø', icons: [
        { img: 'assets/nv1.png', text: 'Nghƒ©a v·ª• thu·∫ø<br>hi·ªán t·∫°i', link: '#' },
        { img: 'assets/nv2.png', text: 'L·ªãch s·ª≠<br>nghƒ©a v·ª• thu·∫ø', link: '#' },
        { img: 'assets/nv3.png', text: 'B√°o c√°o<br>thu·∫ø', link: '#' }
    ]},
    { file: 'tienich.html', title: 'Ti·ªán √≠ch', icons: [
        { img: 'assets/icon7.png', text: 'M√°y t√≠nh<br>thu·∫ø', link: '#' },
        { img: 'assets/icon8.png', text: 'Tra c·ª©u<br>m√£ s·ªë thu·∫ø', link: '#' },
        { img: 'assets/icon9.png', text: 'H∆∞·ªõng d·∫´n<br>s·ª≠ d·ª•ng', link: '#' }
    ]},
    { file: 'hotro.html', title: 'H·ªó tr·ª£', icons: [
        { img: 'assets/icon9.png', text: 'Li√™n h·ªá<br>h·ªó tr·ª£', link: '#' },
        { img: 'assets/icon8.png', text: 'C√¢u h·ªèi<br>th∆∞·ªùng g·∫∑p', link: '#' },
        { img: 'assets/icon7.png', text: 'H∆∞·ªõng d·∫´n<br>chi ti·∫øt', link: '#' }
    ]},
    { file: 'thietlap.html', title: 'Thi·∫øt l·∫≠p c√° nh√¢n', icons: [
        { img: 'assets/index7.png', text: 'Thi·∫øt l·∫≠p<br>c√° nh√¢n', link: '#' },
        { img: 'assets/icon9.png', text: 'Qu·∫£n l√Ω<br>t√†i kho·∫£n', link: '#' },
        { img: 'assets/icon9.png', text: 'B·∫£o m·∫≠t', link: '#' },
        { img: 'assets/icon9.png', text: 'Th√¥ng b√°o', link: '#' },
        { img: 'assets/icon9.png', text: 'Ng√¥n ng·ªØ', link: '#' },
        { img: 'assets/icon9.png', text: 'Gi·ªõi thi·ªáu', link: '#' }
    ]}
];

console.log('üîß B·∫Øt ƒë·∫ßu s·ª≠a layout theo chu·∫©n hoadondt.html...');

// L·∫•y template chu·∫©n t·ª´ hoadondt.html
const templatePath = path.join(__dirname, 'hoadondt.html');
const templateContent = fs.readFileSync(templatePath, 'utf8');

// Tr√≠ch xu·∫•t ph·∫ßn CSS v√† structure chu·∫©n
const cssMatch = templateContent.match(/<style>([\s\S]*?)<\/style>/);
const standardCSS = cssMatch ? cssMatch[1] : '';

const scriptMatch = templateContent.match(/<script>([\s\S]*?)<\/script>/);
const standardScript = scriptMatch ? scriptMatch[1] : '';

function createPageContent(pageData) {
    // T·∫°o grid icon theo layout chu·∫©n
    let iconRows = '';
    
    // Chia icon th√†nh c√°c h√†ng, m·ªói h√†ng 3 icon
    for (let i = 0; i < pageData.icons.length; i += 3) {
        const rowIcons = pageData.icons.slice(i, i + 3);
        iconRows += `    <div style="display: flex; justify-content: center; gap: 16px; margin-bottom: 20px;">\\n`;
        
        rowIcons.forEach(icon => {
            iconRows += `      <div style="text-align: center; width: 200px;">
        <div onclick="window.location.href='${icon.link}'" style="text-align: center; cursor: pointer;">
        <img src="${icon.img}" style="width: 65px; height: 65px;" /><br>
            <span style="display: inline-block; line-height: 1.4;">
                ${icon.text}
            </span>
        </div>
      </div>\\n`;
        });
        
        iconRows += `    </div>\\n`;
    }

    return `<!DOCTYPE html>
<html lang="vi">
<head>
<meta charset="UTF-8">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!-- PWA Meta Tags -->
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover">
<!-- üîí KH√ìA ORIENTATION CH·ªà CHO PH√âP D·ªåC -->
<meta name="screen-orientation" content="portrait">
<meta name="mobile-web-app-orientations" content="portrait">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="default">
<meta name="apple-mobile-web-app-title" content="eTax Mobile">
<meta name="mobile-web-app-capable" content="yes">
<meta name="theme-color" content="#b71c1c">

<!-- PWA Icons -->
<link rel="apple-touch-icon" href="assets/logo.png">
<link rel="icon" type="image/png" href="assets/logo.png">
<!-- üîß FIX: Conditional manifest ƒë·ªÉ tr√°nh CORS l·ªói v·ªõi file:// -->
<script>
  if (window.location.protocol !== 'file:') {
    const link = document.createElement('link');
    link.rel = 'manifest';
    link.href = 'manifest.json';
    document.head.appendChild(link);
  }
</script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

<title>eTax Mobile - ${pageData.title}</title>

<style>
${standardCSS}
</style>
</head>
<body>
    <div class="phone-frame">
        <!-- ‚úÖ CONSISTENT HEADER WITH PWA TEMPLATE -->
        <div class="header">
            <i class="fas fa-arrow-left" onclick="window.location.href='index.html'"></i>
            <div class="header-title">${pageData.title}</div>
            <i class="fas fa-house" onclick="window.location.href='index.html'"></i>
        </div>

        <div>   &nbsp; </div>
${iconRows}   
    </div>

    <script>
${standardScript}
    </script>
</body>
</html>`;
}

// S·ª≠a t·ª´ng trang
pagesToFix.forEach(pageData => {
    const filePath = path.join(__dirname, pageData.file);
    
    if (fs.existsSync(filePath)) {
        console.log(`üõ†Ô∏è ƒêang s·ª≠a ${pageData.file}...`);
        
        const newContent = createPageContent(pageData);
        fs.writeFileSync(filePath, newContent, 'utf8');
        
        console.log(`‚úÖ ƒê√£ s·ª≠a xong ${pageData.file}`);
    } else {
        console.log(`‚ùå Kh√¥ng t√¨m th·∫•y ${pageData.file}`);
    }
});

console.log('\\nüéâ Ho√†n th√†nh s·ª≠a layout theo chu·∫©n!');